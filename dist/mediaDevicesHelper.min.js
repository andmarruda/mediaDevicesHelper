/**
 * This project is a helper to developers that needs to access camera and microphone, make pictore or record and send it with ajax to a server
 * @version 1.0.0
 * @author Anderson Arruda < anderson@sysborg.com.br >
 * @license MIT
 */
class mediaDevices{constructor(e,i,t){this._allowedImageTypes={jpg:"image/jpeg",gif:"image/gif",png:"image/png",svg:"image/svg+xml",webp:"image/webp"},this._audio=Boolean(e),this._video=Boolean(i),this._videoElement=document.getElementById(t.videoElementId),this._audioElement=document.getElementById(t.audioElementId),this._config={},void 0!==this._config.videoWidth&&(this._config.video={width:{...this._config.videoWidth}}),void 0!==this._config.videoHeight&&(this._config.video={height:{...this._config.videoHeight}}),this.start()}async start(){this._mediaDevices=await navigator.mediaDevices.getUserMedia({audio:this._audio,video:this._config.video||this._video}),this._video&&null!==this._videoElement&&(this._videoElement.srcObject=this._mediaDevices,this._videoElement.play()),this._audio&&null!==this._audioElement&&(this._audioElement.srcObject=this._mediaDevices,this._audioElement.play())}getPicture(e="png"){this._canvas=document.createElement("canvas");let i=this._canvas.getContext("2d");return this._canvas.width=this._videoElement.videoWidth,this._canvas.height=this._videoElement.videoHeight,i.drawImage(this._videoElement,0,0,this._canvas.width,this._canvas.height),this._canvas.toDataURL(this._allowedImageTypes[e])}async getPictureBlob(e="png",i=1){const t=await new Promise((t=>this._canvas.toBlob(t,this._allowedImageTypes[e],i)));return new File([t],`picture.${e}`,{type:this._allowedImageTypes[e],lastModified:Date.now()})}getRecorder(){return new recorder(this._mediaDevices)}status(){return void 0!==this._mediaDevices}}
/**
 * Records all streams from the media device
 * @version 1.0.0
 * @author  Anderson Arruda < anderson@sysborg.com.br >
 * @license MIT
 */class recorder{constructor(e){this._allowedVideoTypes={mp4:"video/mp4",mpeg:"video/mpeg",ogv:"video/ogg",webm:"video/webm"},this._allowedAudioTypes={aac:"audio/aac",mp3:"audio/mpeg",wav:"audio/wav",oga:"audio/ogg",weba:"audio/webm"},this._mediaDevice=e,this._recorder=new MediaRecorder(this._mediaDevice),this._data=[],this._time=0,this._recording=!1,this._error,this._limit=-1,this._dataAvailable=!1;var i=this;this._recorder.addEventListener("dataavailable",(e=>{i._data.push(e.data)})),this._recorder.onstart=()=>i._countTime(),this._recorder.onresume=()=>i._countTime(),this._recorder.onstop=()=>{i._stopCountTime(),i._dataAvailable=!0,console.log(i._data),console.log(i._dataAvailable)},this._recorder.onerror=e=>{i.stop(),i._error=e.name}}setLimit(e){this._limit=1e3*e}_countTime(){this._recording=!0;var e=this;this._interval=setInterval((()=>{e._time++}),1e3)}_stopCountTime(){this._recording=!1,clearInterval(this._interval)}start(){this._time=0,this._dataAvailable=!1,this._recorder.start();var e=this;this._limit>-1&&wait(this._limit).then((()=>{e.stop()}))}resume(){this._recorder.resume()}stop(){this._recorder.stop()}status(){return this._recording}getTime(){return this._time}getError(){return this._error}getBlob(e){this.status()&&this.stop();var i=this;return new Promise((t=>{const s=()=>{i._dataAvailable?t(new Blob(i._data,{type:i._allowedAudioTypes[e]||i._allowedVideoTypes[e]})):setTimeout(s,100)};s()}))}async getAudio(e){const i=await this.getBlob(mimeType);return new File([i],`audio.${e}`,{type:this._allowedAudioTypes[e],lastModified:Date.now()})}async getVideo(e){const i=await this.getBlob(e);return new File([i],`video.${e}`,{type:this._allowedVideoTypes[e],lastModified:Date.now()})}}